recognition_of_cetaceans_app:
  url:  /reconhecimento-de-cetaceos
  params:
    module:     prMain
    action:     controlPanel
  requirements:
    sf_method:  get
    
pr_catalog:
  url:   /:sf_culture/catalog
  param: { module: prCatalog, action: index }

pr_catalog_individual:
  url:   /:sf_culture/catalog/individual/:id
  param: { module: prCatalog, action: individual }
  
pr_catalog_export_individual:
  url:   /:sf_culture/catalog/export/:name
  param: { module: prCatalog, action: exportIndividual }
  
pr_catalog_download_individual:
  url:   /:sf_culture/catalog/download/:name
  param: { module: prCatalog, action: downloadIndividual }
    
pr_add_photos_bulk:
  url:  /reconhecimento-de-cetaceos/upload-photos-bulk
  params:
    module:     prMain
    action:     uploadPhotosBulk
  requirements:
    sf_method:  get
    
pr_process_add_photos_bulk:
  url:  /reconhecimento-de-cetaceos/process-upload-photos-bulk
  params:
    module:     prMain
    action:     processUploadPhotosBulk
  requirements:
    sf_method:  post
    
pr_delete_pendent_photos_bulk:
  url:  /reconhecimento-de-cetaceos/delete-photos-bulk
  params:
    module:     prMain
    action:     deletePendentPhotosBulk
  requirements:
    sf_method:  post
    
pr_pendent_photos_list:
  url:  /reconhecimento-de-cetaceos/fotos/por-processar
  params:
    module:     prMain
    action:     pendentPhotoList
    
pr_pendent_invalid_photos_delete:
  url:  /reconhecimento-de-cetaceos/fotos/apagar-nomes-invalidos
  params:
    module:     prMain
    action:     deleteInvalidPendentPhoto
  requirements:
    sf_method: post
    
pr_pendent_photo_delete:
  url:  /reconhecimento-de-cetaceos/fotos/apagar/:filename.:extension
  params:
    module:     prMain
    action:     deletePendentPhoto
  requirements:
    sf_method: post
    
pr_new_individual_by_photo:
  url:  /observation-photo/:id/new-individual
  params:
    module:     prObservationPhoto
    action:     newIndividualByPhoto
  requirements:
    sf_method: post
    
pr_associate_individual_by_photo:
  url:  /observation-photo/:id/associate/individual/:individual_id
  params:
    module:     prObservationPhoto
    action:     associateIndividualByPhoto
  requirements:
    sf_method: post
    
pr_define_as_best:
  url:  /observation-photo/:id/define-as-best
  params:
    module:     prObservationPhoto
    action:     defineAsBest
  requirements:
    sf_method: post
    
pr_individual:
  class: sfPropel15RouteCollection
  options:
    model:                Individual
    module:               prIndividual
    prefix_path:          /individuo
    column:               id
    with_wildcard_routes: true
    with_show:            true
    
pr_pattern:
  class: sfPropel15RouteCollection
  options:
    model:                Pattern
    module:               prPattern
    prefix_path:          /padrao
    column:               id
    with_wildcard_routes: true
    
pr_uploaded_photo:
  class: sfPropel15RouteCollection
  options:
    model:                UploadedPhoto
    module:               prUploadedPhoto
    prefix_path:          /uploaded-photo
    column:               id
    with_wildcard_routes: true
    
pr_observation_photo_export:
  url:  /observation-photo/export
  params:
    module:     prObservationPhoto
    action:     export
  requirements:
    sf_method: get

pr_observation_photo_multi_edit:
  url:  /observation-photo/multi_edit
  params:
    module:     prObservationPhoto
    action:     multiEdit

pr_observation_photo_multi_edit_update:
  url:  /observation-photo/multi_edit_update
  params:
    module:     prObservationPhoto
    action:     multiEditUpdate
  requirements:
    sf_method: post
    
pr_observation_photo_validated:
  url:  /observation-photo/catalog-admin
  params:
    module:     prObservationPhoto
    action:     catalog

pr_observation_photo_validate:
  url:  /observation-photo/:id/validate
  params:
    module:     prObservationPhoto
    action:     validate
  requirements:
    sf_method: get
    
pr_observation_photo_characterize:
  url:  /observation-photo/:id/characterize
  params:
    module:     prObservationPhoto
    action:     characterize
  requirements:
    sf_method: get
    
pr_observation_photo_identify:
  url:  /observation-photo/:id/identify
  params:
    module:     prObservationPhoto
    action:     identify
  requirements:
    sf_method: get
    
pr_observation_photo:
  class: sfPropel15RouteCollection
  options:
    model:                ObservationPhoto
    module:               prObservationPhoto
    prefix_path:          /observation-photo
    column:               id
    with_wildcard_routes: true
    
    
pr_photographer:
  class: sfPropel15RouteCollection
  options:
    model:                Photographer
    module:               prPhotographer
    prefix_path:          /photographer
    column:               id
    with_wildcard_routes: true

pr_body_part:
  class: sfPropel15RouteCollection
  options:
    model:                BodyPart
    module:               prBodyPart
    prefix_path:          /body-part
    column:               id
    with_wildcard_routes: true
    
observation_photo_tail:
  class: sfPropel15RouteCollection
  options:
    model:                ObservationPhotoTail
    module:               prObservationPhotoTail
    prefix_path:          /prObservationPhotoTail
    column:               id
    with_wildcard_routes: true
    
observation_photo_dorsal_right:
  class: sfPropel15RouteCollection
  options:
    model:                ObservationPhotoDorsalRight
    module:               prObservationPhotoDorsalRight
    prefix_path:          /prObservationPhotoDorsalRight
    column:               id
    with_wildcard_routes: true

observation_photo_dorsal_left:
  class: sfPropel15RouteCollection
  options:
    model:                ObservationPhotoDorsalLeft
    module:               prObservationPhotoDorsalLeft
    prefix_path:          /prObservationPhotoDorsalLeft
    column:               id
    with_wildcard_routes: true

ajax_doubt:
  url:  /ajax/observation-photo/doubt
  params:
    module:     prObservationPhoto
    action:     ajaxDoubt
  requirements:
    sf_method: post

ajax_dominant:
  url:  /ajax/individuo/dominant
  params:
    module:     prIndividual
    action:     ajaxChangeDominantBodyPart
  requirements:
    sf_method: post
    
ajax_get_sightings_by_company:
  url:  /ajax/company/:company_id/sightings/on/:date
  params:
    module:     prObservationPhoto
    action:     ajaxGetSightingsForCompany
  requirements:
    sf_method: post
    
ajax_get_sighting:
  url:  /ajax/sighting/:id
  params:
    module:     prObservationPhoto
    action:     ajaxGetSighting
  requirements:
    sf_method: post
        
ajax_get_possible_matches:
  url:  /ajax/observation-photo/possible-matches
  params:
    module:     prObservationPhoto
    action:     ajaxGetPossibleMatches
  requirements:
    sf_method: post
    
get_sightings_by_date:
  url:  /sightings/on/:date
  params:
    module:     prObservationPhoto
    action:     getSightingsOnDate
  requirements:
    sf_method: get
    
observation_photo_dorsal_left_mark:
  class: sfPropel15RouteCollection
  options:
    model:                ObservationPhotoDorsalLeftMark
    module:               prObservationPhotoDorsalLeftMark
    prefix_path:          /prObservationPhotoDorsalLeftMark
    column:               id
    with_wildcard_routes: true

observation_photo_dorsal_right_mark:
  class: sfPropel15RouteCollection
  options:
    model:                ObservationPhotoDorsalRightMark
    module:               prObservationPhotoDorsalRightMark
    prefix_path:          /prObservationPhotoDorsalRightMark
    column:               id
    with_wildcard_routes: true

observation_photo_tail_mark:
  class: sfPropel15RouteCollection
  options:
    model:                ObservationPhotoTailMark
    module:               prObservationPhotoTailMark
    prefix_path:          /prObservationPhotoTailMark
    column:               id
    with_wildcard_routes: true
    
ajax_filter_sightings:
  url:  /ajax/filter-sightings
  params:
    module:     prObservationPhoto
    action:     ajaxFilterSightings
  requirements:
    sf_method: get